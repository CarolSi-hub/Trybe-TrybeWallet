{"ast":null,"code":"var _jsxFileName = \"/home/ana/Documentos/Trybe/Trybe-Projects/Trybe-TrybeWallet/src/components/WalletForm/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies, fetchCurrenciesData, addExpense, editExpense } from '../../actions';\nimport './WalletForm.css';\n\nclass WalletForm extends React.Component {\n  constructor() {\n    super();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getWhatToRender = this.getWhatToRender.bind(this);\n    this.state = {\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {}\n    };\n  }\n\n  componentDidMount() {\n    const {\n      fetchCurrenciesProps\n    } = this.props;\n    fetchCurrenciesProps();\n  }\n\n  getWhatToRender() {\n    const {\n      expenseToEditProps\n    } = this.props;\n    this.setState(expenseToEditProps);\n  }\n\n  handleInputChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const {\n      addExpenseProps,\n      fetchCurrenciesDataProps\n    } = this.props;\n    await fetchCurrenciesDataProps();\n    addExpenseProps({ ...this.state\n    });\n    this.setState({\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {}\n    });\n  }\n\n  render() {\n    const {\n      currenciesProps,\n      isToEditProps,\n      editExpenseProps\n    } = this.props;\n    const {\n      value,\n      description,\n      method,\n      tag,\n      currency\n    } = this.state;\n    if (isToEditProps && this.state.id === undefined) this.getWhatToRender();\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"wallet-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"value-input\",\n      type: \"number\",\n      id: \"value\",\n      name: \"value\",\n      value: value,\n      onChange: this.handleInputChange,\n      className: \"wallet-input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"description-input\",\n      type: \"text\",\n      id: \"description\",\n      name: \"description\",\n      value: description,\n      onChange: this.handleInputChange,\n      className: \"wallet-input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      id: \"currency\",\n      name: \"currency\",\n      value: currency,\n      onChange: this.handleInputChange,\n      className: \"wallet-input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, currenciesProps.map(exchange => /*#__PURE__*/React.createElement(\"option\", {\n      \"data-testid\": exchange,\n      value: exchange,\n      key: exchange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, exchange)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, \"Pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      name: \"method\",\n      id: \"method\",\n      value: method,\n      onChange: this.handleInputChange,\n      className: \"wallet-input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Dinheiro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de cr\\xE9dito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de d\\xE9bito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, \"Tipo:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      name: \"tag\",\n      id: \"tag\",\n      value: tag,\n      onChange: this.handleInputChange,\n      className: \"wallet-input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Alimenta\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Lazer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Trabalho\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Transporte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Sa\\xFAde\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, \"Sa\\xFAde\"))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: isToEditProps ? editExpenseProps(this.state.id) : this.handleSubmit,\n      className: \"wallet-form-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, isToEditProps ? 'Editar' : 'Adicionar despesa'));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currenciesProps: state.wallet.currencies,\n  isToEditProps: state.wallet.isToEdit,\n  expenseToEditProps: state.wallet.expenseToEdit\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCurrenciesProps: () => dispatch(fetchCurrencies()),\n  fetchCurrenciesDataProps: () => dispatch(fetchCurrenciesData()),\n  addExpenseProps: expense => dispatch(addExpense(expense)),\n  editExpenseProps: expense => dispatch(editExpense(e))\n});\n\nWalletForm.propTypes = {\n  fetchCurrenciesProps: PropTypes.func.isRequired,\n  addExpenseProps: PropTypes.func.isRequired,\n  currenciesProps: PropTypes.arrayOf(PropTypes.string).isRequired,\n  fetchCurrenciesDataProps: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);","map":{"version":3,"sources":["/home/ana/Documentos/Trybe/Trybe-Projects/Trybe-TrybeWallet/src/components/WalletForm/index.js"],"names":["React","PropTypes","connect","fetchCurrencies","fetchCurrenciesData","addExpense","editExpense","WalletForm","Component","constructor","handleInputChange","bind","handleSubmit","getWhatToRender","state","value","description","currency","method","tag","exchangeRates","componentDidMount","fetchCurrenciesProps","props","expenseToEditProps","setState","target","name","event","preventDefault","addExpenseProps","fetchCurrenciesDataProps","render","currenciesProps","isToEditProps","editExpenseProps","id","undefined","map","exchange","mapStateToProps","wallet","currencies","isToEdit","expenseToEdit","mapDispatchToProps","dispatch","expense","e","propTypes","func","isRequired","arrayOf","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies, fetchCurrenciesData, addExpense, editExpense } from '../../actions';\nimport './WalletForm.css';\n\nclass WalletForm extends React.Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getWhatToRender = this.getWhatToRender.bind(this);\n\n    this.state = {     \n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {},\n    };\n  }\n\n  componentDidMount() {\n    const { fetchCurrenciesProps } = this.props;   \n    fetchCurrenciesProps();  \n  }   \n\n  getWhatToRender() {\n    const { expenseToEditProps } = this.props;\n      this.setState(expenseToEditProps);\n  }\n\n  handleInputChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const { addExpenseProps, fetchCurrenciesDataProps } = this.props;\n    await fetchCurrenciesDataProps();\n    addExpenseProps({...this.state});\n    this.setState({\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {},\n    });\n  }\n\n  \n  render() {\n\n    const { currenciesProps, isToEditProps, editExpenseProps } = this.props;\n    const { value, description, method, tag, currency } = this.state;\n\n   if(isToEditProps && this.state.id === undefined) this.getWhatToRender();\n\n      return (\n      <form className=\"wallet-form\">\n        <label htmlFor=\"value\">\n          Valor:\n          <input\n            data-testid=\"value-input\"\n            type=\"number\"\n            id=\"value\"\n            name=\"value\"\n            value={ value }\n            onChange={ this.handleInputChange }\n            className=\"wallet-input-box\"\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Descrição:\n          <input\n            data-testid=\"description-input\"\n            type=\"text\"\n            id=\"description\"\n            name=\"description\"\n            value={ description }\n            onChange={ this.handleInputChange }\n            className=\"wallet-input-box\"\n          />\n        </label>\n        <label htmlFor=\"currency\">\n          Moeda:\n          <select\n            data-testid=\"currency-input\"\n            id=\"currency\"\n            name=\"currency\"\n            value={ currency }\n            onChange={ this.handleInputChange }\n            className=\"wallet-input-box\"\n          >\n            {currenciesProps\n              .map((exchange) => (\n                <option data-testid={ exchange } value={ exchange } key={ exchange }>\n                  { exchange }\n                </option>\n              ))}\n          </select>\n        </label>\n        <label htmlFor=\"method\">\n          Pagamento:\n          <select\n            data-testid=\"method-input\"\n            name=\"method\"\n            id=\"method\"\n            value={ method }\n            onChange={ this.handleInputChange }\n            className=\"wallet-input-box\"\n          >\n            <option value=\"Dinheiro\">Dinheiro</option>\n            <option value=\"Cartão de crédito\">Cartão de crédito</option>\n            <option value=\"Cartão de débito\">Cartão de débito</option>\n\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          Tipo:\n          <select\n            data-testid=\"tag-input\"\n            name=\"tag\"\n            id=\"tag\"\n            value={ tag }\n            onChange={ this.handleInputChange }\n            className=\"wallet-input-box\"\n          >\n            <option value=\"Alimentação\">Alimentação</option>\n            <option value=\"Lazer\">Lazer</option>\n            <option value=\"Trabalho\">Trabalho</option>\n            <option value=\"Transporte\">Transporte</option>\n            <option value=\"Saúde\">Saúde</option>\n          </select>\n        </label>\n        <button\n          type=\"button\"\n          onClick={ isToEditProps ? editExpenseProps(this.state.id) : this.handleSubmit }\n          className=\"wallet-form-button\"\n        >\n          {isToEditProps ? 'Editar' : 'Adicionar despesa'}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currenciesProps: state.wallet.currencies,\n  isToEditProps: state.wallet.isToEdit,\n  expenseToEditProps: state.wallet.expenseToEdit,\n });\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCurrenciesProps: () => dispatch(fetchCurrencies()),\n  fetchCurrenciesDataProps: () => dispatch(fetchCurrenciesData()),\n  addExpenseProps: (expense) => dispatch(addExpense(expense)),\n  editExpenseProps: (expense) => dispatch(editExpense(e)),\n});\n\nWalletForm.propTypes = {\n  fetchCurrenciesProps: PropTypes.func.isRequired,\n  addExpenseProps: PropTypes.func.isRequired,\n  currenciesProps: PropTypes.arrayOf(PropTypes.string).isRequired,\n  fetchCurrenciesDataProps: PropTypes.func.isRequired,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);\n"]},"metadata":{},"sourceType":"module"}