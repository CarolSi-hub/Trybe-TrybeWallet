{"ast":null,"code":"var _jsxFileName = \"/home/ana/Documentos/Trybe/Trybe-Projects/Trybe-TrybeWallet/src/components/WalletTable/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteExpense, getEditExpense } from '../../actions';\nimport './WalletTable.css';\n\nclass WalletTable extends React.Component {\n  constructor() {\n    super();\n    this.toConvertValue = this.toConvertValue.bind(this);\n  }\n\n  toConvertValue(expenseValue, exchange) {\n    const updatedValue = Number(expenseValue) * Number(exchange);\n    return updatedValue;\n  }\n\n  render() {\n    const {\n      tableData,\n      deleteExpenseProps,\n      getEditExpenseProps\n    } = this.props;\n    const tableHead = ['Descrição', 'Tag', 'Método de pagamento', 'Valor', 'Moeda', 'Câmbio utilizado', 'Valor convertido', 'Moeda de conversão', 'Editar/Excluir'];\n    return /*#__PURE__*/React.createElement(\"table\", {\n      border: \"1\",\n      className: \"wallet-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }), tableHead.map(tableKey => /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"wallet-table-head\",\n      key: tableKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, tableKey))), tableData.map(expense => /*#__PURE__*/React.createElement(\"tr\", {\n      key: expense.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"wallet-table-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, expense.description), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"wallet-table-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, expense.tag), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"wallet-table-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, expense.method), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"wallet-table-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, expense.value), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"wallet-table-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, expense.exchangeRates[expense.currency].name), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"wallet-table-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, Number(expense.exchangeRates[expense.currency].ask).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"wallet-table-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, this.toConvertValue(expense.value, expense.exchangeRates[expense.currency].ask).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"wallet-table-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"Real\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"wallet-table-data-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"edit-btn\",\n      type: \"button\",\n      onClick: () => getEditExpenseProps(expense),\n      className: \"wallet-table-button-edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, \"/\"), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"delete-btn\",\n      type: \"button\",\n      onClick: () => deleteExpenseProps(expense.id),\n      className: \"wallet-table-button-delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \"X\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  tableData: state.wallet.expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteExpenseProps: id => dispatch(deleteExpense(id)),\n  getEditExpenseProps: expense => dispatch(getEditExpense(expense))\n});\n\nWalletTable.propTypes = {\n  tableData: PropTypes.arrayOf(PropTypes.number).isRequired,\n  deleteExpenseProps: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletTable);","map":{"version":3,"sources":["/home/ana/Documentos/Trybe/Trybe-Projects/Trybe-TrybeWallet/src/components/WalletTable/index.js"],"names":["React","connect","PropTypes","deleteExpense","getEditExpense","WalletTable","Component","constructor","toConvertValue","bind","expenseValue","exchange","updatedValue","Number","render","tableData","deleteExpenseProps","getEditExpenseProps","props","tableHead","map","tableKey","expense","id","description","tag","method","value","exchangeRates","currency","name","ask","toFixed","mapStateToProps","state","wallet","expenses","mapDispatchToProps","dispatch","propTypes","arrayOf","number","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteExpense, getEditExpense } from '../../actions';\nimport './WalletTable.css';\n\nclass WalletTable extends React.Component {\n  constructor() {\n    super();\n\n    this.toConvertValue = this.toConvertValue.bind(this);\n  }\n\n  toConvertValue(expenseValue, exchange) {\n    const updatedValue = Number(expenseValue) * Number(exchange);\n    return updatedValue;\n  }\n\n  render() {\n    const { tableData, deleteExpenseProps, getEditExpenseProps } = this.props;\n\n    const tableHead = [\n      'Descrição',\n      'Tag',\n      'Método de pagamento',\n      'Valor', 'Moeda',\n      'Câmbio utilizado',\n      'Valor convertido',\n      'Moeda de conversão',\n      'Editar/Excluir',\n\n    ];\n    return (\n      <table border=\"1\" className=\"wallet-table\">\n        <thead>\n          <tr></tr>\n          {tableHead.map((tableKey) => (\n            <tr\n              className=\"wallet-table-head\"\n              key={ tableKey }\n            >\n              { tableKey }\n            </tr>))}\n        </thead>\n        {tableData.map((expense) => (\n          <tr key={ expense.id }>\n            <td className=\"wallet-table-data\">{expense.description}</td>\n            <td className=\"wallet-table-data\">{expense.tag}</td>\n            <td className=\"wallet-table-data\">{expense.method}</td>\n            <td className=\"wallet-table-data\">{expense.value}</td>\n            <td\n              className=\"wallet-table-data\"\n            >\n              {expense.exchangeRates[expense.currency].name}\n            </td>\n            <td\n              className=\"wallet-table-data\"\n            >\n              { Number(expense.exchangeRates[expense.currency].ask).toFixed(2) }\n            </td>\n            <td className=\"wallet-table-data\">\n              { this.toConvertValue(\n                expense.value, expense.exchangeRates[expense.currency].ask,\n              ).toFixed(2) }\n            </td>\n            <td className=\"wallet-table-data\">Real</td>\n            <td className=\"wallet-table-data-button\">\n              <button\n                data-testid=\"edit-btn\"\n                type=\"button\"\n                onClick={ () => getEditExpenseProps(expense) }\n                className=\"wallet-table-button-edit\"\n              >\n                /\n              </button>\n              <button\n                data-testid=\"delete-btn\"\n                type=\"button\"\n                onClick={ () => deleteExpenseProps(expense.id) }\n                className=\"wallet-table-button-delete\"\n              >\n                X\n              </button>\n            </td>\n          </tr>))}\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  tableData: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteExpenseProps: (id) => dispatch(deleteExpense(id)),\n  getEditExpenseProps: (expense) => dispatch(getEditExpense(expense)),\n});\n\nWalletTable.propTypes = {\n  tableData: PropTypes.arrayOf(PropTypes.number).isRequired,\n  deleteExpenseProps: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletTable);\n"]},"metadata":{},"sourceType":"module"}