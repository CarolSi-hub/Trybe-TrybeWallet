{"ast":null,"code":"import { REQUEST_CURRENCIES, REQUEST_CURRENCIES_DATA, ADD_EXPENSE, DELETE_EXPENSE, GET_EDIT_EXPENSE, EDIT_EXPENSE } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  latestExchange: {},\n  currentId: 0,\n  totalExpense: 0,\n  isToEdit: false,\n  expenseToEdit: {\n    value: 0,\n    description: '',\n    currency: 'USD',\n    method: 'Dinheiro',\n    tag: 'Alimentação',\n    exchangeRates: {}\n  }\n};\n\nfunction getTotalValue(expenses) {\n  const totalValue = expenses.reduce((acc, expense) => acc + Number(expense.value) * Number(expense.exchangeRates[expense.currency].ask), 0);\n  return totalValue;\n}\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case REQUEST_CURRENCIES:\n      return { ...state,\n        currencies: action.currencies.sort()\n      };\n\n    case REQUEST_CURRENCIES_DATA:\n      return { ...state,\n        latestExchange: action.exchangeRates\n      };\n\n    case ADD_EXPENSE:\n      action.expense.id = state.currentId;\n      action.expense.exchangeRates = { ...state.latestExchange\n      };\n      return { ...state,\n        expenses: [...state.expenses, action.expense],\n        currentId: state.currentId + 1,\n        totalExpense: getTotalValue([...state.expenses, action.expense])\n      };\n\n    case DELETE_EXPENSE:\n      return { ...state,\n        expenses: [...state.expenses.filter(({\n          id\n        }) => id !== action.id)],\n        totalExpense: getTotalValue([...state.expenses.filter(({\n          id\n        }) => id !== action.id)])\n      };\n\n    case GET_EDIT_EXPENSE:\n      return { ...state,\n        expenseToEdit: action.expense,\n        isToEdit: true\n      };\n\n    case EDIT_EXPENSE:\n      {\n        const index = action.id;\n        const expensesState = [...state.expenses];\n        expensesState[index] = { ...action.expense\n        };\n        return { ...state,\n          expenses: [...expensesState],\n          isToEdit: false\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/ana/Documentos/Trybe/Trybe-Projects/Trybe-TrybeWallet/src/reducers/wallet.js"],"names":["REQUEST_CURRENCIES","REQUEST_CURRENCIES_DATA","ADD_EXPENSE","DELETE_EXPENSE","GET_EDIT_EXPENSE","EDIT_EXPENSE","INITIAL_STATE","currencies","expenses","latestExchange","currentId","totalExpense","isToEdit","expenseToEdit","value","description","currency","method","tag","exchangeRates","getTotalValue","totalValue","reduce","acc","expense","Number","ask","state","action","type","sort","id","filter","index","expensesState"],"mappings":"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","sourcesContent":["import {\n  REQUEST_CURRENCIES,\n  REQUEST_CURRENCIES_DATA,\n  ADD_EXPENSE,\n  DELETE_EXPENSE,\n  GET_EDIT_EXPENSE,\n  EDIT_EXPENSE,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  latestExchange: {},\n  currentId: 0,\n  totalExpense: 0,\n  isToEdit: false,\n  expenseToEdit: {\n    value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {},},\n};\n\nfunction getTotalValue(expenses) {\n  const totalValue = expenses.reduce((acc, expense) => acc\n    + Number(expense.value)\n      * Number(expense.exchangeRates[expense.currency].ask),\n  0);\n  return totalValue;\n}\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case REQUEST_CURRENCIES:\n    return { ...state, currencies: (action.currencies).sort() };\n  case REQUEST_CURRENCIES_DATA:\n    return { ...state, latestExchange: action.exchangeRates };\n  case ADD_EXPENSE:\n    action.expense.id = state.currentId;\n    action.expense.exchangeRates = { ...state.latestExchange };\n    return { ...state,\n      expenses: [...state.expenses, action.expense],\n      currentId: state.currentId + 1,\n      totalExpense: getTotalValue([...state.expenses, action.expense]),\n    };\n  case DELETE_EXPENSE:\n    return { ...state,\n      expenses: [...state.expenses.filter(({ id }) => id !== action.id)],\n      totalExpense: getTotalValue(\n        [...state.expenses.filter(({ id }) => id !== action.id)],\n      ),\n    };\n  case GET_EDIT_EXPENSE:\n    return { ...state,\n      expenseToEdit: action.expense,\n      isToEdit: true,\n    };\n  case EDIT_EXPENSE: {\n    const index = action.id;\n    const expensesState = [...state.expenses];\n    expensesState[index] = { ...action.expense };\n    return {\n      ...state,\n      expenses: [\n        ...expensesState,\n      ],\n      isToEdit: false,\n    };\n  }\n\n  default:\n    return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}