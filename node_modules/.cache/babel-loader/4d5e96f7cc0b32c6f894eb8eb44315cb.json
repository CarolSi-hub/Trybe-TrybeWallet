{"ast":null,"code":"var _jsxFileName = \"/home/ana/Documentos/Trybe/Trybe-Projects/Trybe-TrybeWallet/src/components/WalletForm/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies, fetchCurrenciesData, addExpense } from '../../actions';\nimport './WalletForm.css';\n\nclass WalletForm extends React.Component {\n  constructor() {\n    super();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getWhatToRender = this.getWhatToRender.bind(this);\n    this.state = {\n      expense: {\n        value: 0,\n        description: '',\n        currency: 'USD',\n        method: 'Dinheiro',\n        tag: 'Alimentação',\n        exchangeRates: {}\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      fetchCurrenciesProps,\n      isToEditProps\n    } = this.props;\n    fetchCurrenciesProps();\n\n    if (isToEditProps) {\n      this.getWhatToRender();\n    }\n  }\n\n  getWhatToRender() {\n    const {\n      expenseToEditProps\n    } = this.props;\n    this.setState({\n      expense: {\n        expenseToEditProps\n      }\n    });\n  }\n\n  handleInputChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const {\n      addExpenseProps,\n      fetchCurrenciesDataProps\n    } = this.props;\n    await fetchCurrenciesDataProps();\n    addExpenseProps(this.state.expense);\n    this.setState({\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {}\n    });\n  }\n\n  render() {\n    const {\n      currenciesProps,\n      isToEditProps,\n      expenseToEditProps\n    } = this.props;\n    const {\n      value,\n      description,\n      method,\n      tag,\n      currency\n    } = this.state.expense;\n    if (isToEditProps) this.getWhatToRender();\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"wallet-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"value-input\",\n      type: \"number\",\n      id: \"value\",\n      name: \"value\",\n      value: isToEditProps ? expenseToEditProps.value : value,\n      onChange: this.handleInputChange,\n      className: \"wallet-input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"description-input\",\n      type: \"text\",\n      id: \"description\",\n      name: \"description\",\n      value: isToEditProps ? expenseToEditProps.description : description,\n      onChange: this.handleInputChange,\n      className: \"wallet-input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      id: \"currency\",\n      name: \"currency\",\n      value: isToEditProps ? expenseToEditProps.currency : currency,\n      onChange: this.handleInputChange,\n      className: \"wallet-input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, currenciesProps.map(exchange => /*#__PURE__*/React.createElement(\"option\", {\n      \"data-testid\": exchange,\n      value: exchange,\n      key: exchange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, exchange)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \"Pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      name: \"method\",\n      id: \"method\",\n      value: isToEditProps ? expenseToEditProps.method : method,\n      onChange: this.handleInputChange,\n      className: \"wallet-input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Dinheiro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de cr\\xE9dito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de d\\xE9bito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, \"Tipo:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      name: \"tag\",\n      id: \"tag\",\n      value: isToEditProps ? expenseToEditProps.tag : tag,\n      onChange: this.handleInputChange,\n      className: \"wallet-input-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Alimenta\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Lazer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Trabalho\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Transporte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Sa\\xFAde\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, \"Sa\\xFAde\"))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: isToEditProps ? console.log('editar') : this.handleSubmit,\n      className: \"wallet-form-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, isToEditProps ? 'Editar' : 'Adicionar despesa'));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currenciesProps: state.wallet.currencies,\n  isToEditProps: state.wallet.isToEdit,\n  expenseToEditProps: state.wallet.expenseToEdit\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCurrenciesProps: () => dispatch(fetchCurrencies()),\n  fetchCurrenciesDataProps: () => dispatch(fetchCurrenciesData()),\n  addExpenseProps: expense => dispatch(addExpense(expense))\n});\n\nWalletForm.propTypes = {\n  fetchCurrenciesProps: PropTypes.func.isRequired,\n  addExpenseProps: PropTypes.func.isRequired,\n  currenciesProps: PropTypes.arrayOf(PropTypes.string).isRequired,\n  fetchCurrenciesDataProps: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);","map":{"version":3,"sources":["/home/ana/Documentos/Trybe/Trybe-Projects/Trybe-TrybeWallet/src/components/WalletForm/index.js"],"names":["React","PropTypes","connect","fetchCurrencies","fetchCurrenciesData","addExpense","WalletForm","Component","constructor","handleInputChange","bind","handleSubmit","getWhatToRender","state","expense","value","description","currency","method","tag","exchangeRates","componentDidMount","fetchCurrenciesProps","isToEditProps","props","expenseToEditProps","setState","target","name","event","preventDefault","addExpenseProps","fetchCurrenciesDataProps","render","currenciesProps","map","exchange","console","log","mapStateToProps","wallet","currencies","isToEdit","expenseToEdit","mapDispatchToProps","dispatch","propTypes","func","isRequired","arrayOf","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies, fetchCurrenciesData, addExpense } from '../../actions';\nimport './WalletForm.css';\n\nclass WalletForm extends React.Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getWhatToRender = this.getWhatToRender.bind(this);\n\n    this.state = {\n      expense: {      \n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {},\n    },\n    }\n  }\n\n  componentDidMount() {\n    const { fetchCurrenciesProps, isToEditProps } = this.props;   \n    fetchCurrenciesProps();  \n    if(isToEditProps) {\n    this.getWhatToRender();\n    }   \n  }\n\n  getWhatToRender() {\n    const { expenseToEditProps } = this.props;\n      this.setState({ expense : { expenseToEditProps } });\n  }\n\n  handleInputChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const { addExpenseProps, fetchCurrenciesDataProps } = this.props;\n    await fetchCurrenciesDataProps();\n    addExpenseProps(this.state.expense);\n    this.setState({\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {},\n    });\n  }\n\n  render() {\n\n    const { currenciesProps, isToEditProps, expenseToEditProps } = this.props;\n    const { value, description, method, tag, currency } = this.state.expense;\n\n    if(isToEditProps) this.getWhatToRender();\n\n      return (\n      <form className=\"wallet-form\">\n        <label htmlFor=\"value\">\n          Valor:\n          <input\n            data-testid=\"value-input\"\n            type=\"number\"\n            id=\"value\"\n            name=\"value\"\n            value={ isToEditProps ? expenseToEditProps.value : value }\n            onChange={ this.handleInputChange }\n            className=\"wallet-input-box\"\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Descrição:\n          <input\n            data-testid=\"description-input\"\n            type=\"text\"\n            id=\"description\"\n            name=\"description\"\n            value={ isToEditProps ? expenseToEditProps.description : description }\n            onChange={ this.handleInputChange }\n            className=\"wallet-input-box\"\n          />\n        </label>\n        <label htmlFor=\"currency\">\n          Moeda:\n          <select\n            data-testid=\"currency-input\"\n            id=\"currency\"\n            name=\"currency\"\n            value={ isToEditProps ? expenseToEditProps.currency : currency }\n            onChange={ this.handleInputChange }\n            className=\"wallet-input-box\"\n          >\n            {currenciesProps\n              .map((exchange) => (\n                <option data-testid={ exchange } value={ exchange } key={ exchange }>\n                  { exchange }\n                </option>\n              ))}\n          </select>\n        </label>\n        <label htmlFor=\"method\">\n          Pagamento:\n          <select\n            data-testid=\"method-input\"\n            name=\"method\"\n            id=\"method\"\n            value={  isToEditProps ? expenseToEditProps.method : method }\n            onChange={ this.handleInputChange }\n            className=\"wallet-input-box\"\n          >\n            <option value=\"Dinheiro\">Dinheiro</option>\n            <option value=\"Cartão de crédito\">Cartão de crédito</option>\n            <option value=\"Cartão de débito\">Cartão de débito</option>\n\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          Tipo:\n          <select\n            data-testid=\"tag-input\"\n            name=\"tag\"\n            id=\"tag\"\n            value={  isToEditProps ? expenseToEditProps.tag : tag }\n            onChange={ this.handleInputChange }\n            className=\"wallet-input-box\"\n          >\n            <option value=\"Alimentação\">Alimentação</option>\n            <option value=\"Lazer\">Lazer</option>\n            <option value=\"Trabalho\">Trabalho</option>\n            <option value=\"Transporte\">Transporte</option>\n            <option value=\"Saúde\">Saúde</option>\n          </select>\n        </label>\n        <button\n          type=\"button\"\n          onClick={ isToEditProps ? console.log('editar') : this.handleSubmit }\n          className=\"wallet-form-button\"\n        >\n          {isToEditProps ? 'Editar' : 'Adicionar despesa'}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currenciesProps: state.wallet.currencies,\n  isToEditProps: state.wallet.isToEdit,\n  expenseToEditProps: state.wallet.expenseToEdit,\n });\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCurrenciesProps: () => dispatch(fetchCurrencies()),\n  fetchCurrenciesDataProps: () => dispatch(fetchCurrenciesData()),\n  addExpenseProps: (expense) => dispatch(addExpense(expense)),\n});\n\nWalletForm.propTypes = {\n  fetchCurrenciesProps: PropTypes.func.isRequired,\n  addExpenseProps: PropTypes.func.isRequired,\n  currenciesProps: PropTypes.arrayOf(PropTypes.string).isRequired,\n  fetchCurrenciesDataProps: PropTypes.func.isRequired,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);\n"]},"metadata":{},"sourceType":"module"}