{"ast":null,"code":"import { REQUEST_CURRENCIES, REQUEST_CURRENCIES_DATA, ADD_EXPENSE, DELETE_EXPENSE, GET_EDIT_EXPENSE, EDIT_EXPENSE } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  latestExchange: {},\n  currentId: 0,\n  totalExpense: 0,\n  isToEdit: false,\n  expenseToEdit: {}\n};\n\nfunction getTotalValue(expenses) {\n  const totalValue = expenses.reduce((acc, expense) => acc + Number(expense.value) * Number(expense.exchangeRates[expense.currency].ask), 0);\n  return totalValue;\n}\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case REQUEST_CURRENCIES:\n      return { ...state,\n        currencies: action.currencies.sort()\n      };\n\n    case REQUEST_CURRENCIES_DATA:\n      return { ...state,\n        latestExchange: action.exchangeRates\n      };\n\n    case ADD_EXPENSE:\n      action.expense.id = state.currentId;\n      action.expense.exchangeRates = { ...state.latestExchange\n      };\n      return { ...state,\n        expenses: [...state.expenses, action.expense],\n        currentId: state.currentId + 1,\n        totalExpense: getTotalValue([...state.expenses, action.expense])\n      };\n\n    case DELETE_EXPENSE:\n      return { ...state,\n        expenses: [...state.expenses.filter(({\n          id\n        }) => id !== action.id)],\n        totalExpense: getTotalValue([...state.expenses.filter(({\n          id\n        }) => id !== action.id)])\n      };\n\n    case GET_EDIT_EXPENSE:\n      return { ...state,\n        expenseToEdit: action.expense,\n        isToEdit: true\n      };\n\n    case EDIT_EXPENSE:\n      {\n        const index = action.id;\n        const expensesState = [...state.expenses];\n        expensesState[index] = { ...action.expense\n        };\n        return { ...state,\n          expenses: [...expensesState],\n          isToEdit: false\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/ana/Documentos/Trybe/Trybe-Projects/Trybe-TrybeWallet/src/reducers/wallet.js"],"names":["REQUEST_CURRENCIES","REQUEST_CURRENCIES_DATA","ADD_EXPENSE","DELETE_EXPENSE","GET_EDIT_EXPENSE","EDIT_EXPENSE","INITIAL_STATE","currencies","expenses","latestExchange","currentId","totalExpense","isToEdit","expenseToEdit","getTotalValue","totalValue","reduce","acc","expense","Number","value","exchangeRates","currency","ask","state","action","type","sort","id","filter","index","expensesState"],"mappings":"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","sourcesContent":["import {\n  REQUEST_CURRENCIES,\n  REQUEST_CURRENCIES_DATA,\n  ADD_EXPENSE,\n  DELETE_EXPENSE,\n  GET_EDIT_EXPENSE,\n  EDIT_EXPENSE,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  latestExchange: {},\n  currentId: 0,\n  totalExpense: 0,\n  isToEdit: false,\n  expenseToEdit: {},\n};\n\nfunction getTotalValue(expenses) {\n  const totalValue = expenses.reduce((acc, expense) => acc\n    + Number(expense.value)\n      * Number(expense.exchangeRates[expense.currency].ask),\n  0);\n  return totalValue;\n}\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case REQUEST_CURRENCIES:\n    return { ...state, currencies: (action.currencies).sort() };\n  case REQUEST_CURRENCIES_DATA:\n    return { ...state, latestExchange: action.exchangeRates };\n  case ADD_EXPENSE:\n    action.expense.id = state.currentId;\n    action.expense.exchangeRates = { ...state.latestExchange };\n    return { ...state,\n      expenses: [...state.expenses, action.expense],\n      currentId: state.currentId + 1,\n      totalExpense: getTotalValue([...state.expenses, action.expense]),\n    };\n  case DELETE_EXPENSE:\n    return { ...state,\n      expenses: [...state.expenses.filter(({ id }) => id !== action.id)],\n      totalExpense: getTotalValue(\n        [...state.expenses.filter(({ id }) => id !== action.id)],\n      ),\n    };\n  case GET_EDIT_EXPENSE:\n    return { ...state,\n      expenseToEdit: action.expense,\n      isToEdit: true,\n    };\n  case EDIT_EXPENSE: {\n    const index = action.id;\n    const expensesState = [...state.expenses];\n    expensesState[index] = { ...action.expense };\n    return {\n      ...state,\n      expenses: [\n        ...expensesState,\n      ],\n      isToEdit: false,\n    };\n  }\n\n  default:\n    return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}