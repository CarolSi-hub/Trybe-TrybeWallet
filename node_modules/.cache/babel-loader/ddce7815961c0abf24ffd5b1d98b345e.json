{"ast":null,"code":"var _jsxFileName = \"/home/ana/Documentos/Trybe/Trybe-Projects/Trybe-TrybeWallet/src/pages/Login/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { LoginForm } from '../../components';\nimport { signIn } from '../../actions';\nimport './LoginPage.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toValidateData = this.toValidateData.bind(this);\n    this.state = {\n      email: '',\n      password: '',\n      isDisabled: true\n    };\n  }\n\n  handleInputChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    this.setState({\n      [name]: value\n    }, () => {\n      const {\n        email,\n        password\n      } = this.state;\n      const validate = this.toValidateData(email, password) ? this.setState({\n        isDisabled: false\n      }) : this.setState({\n        isDisabled: true\n      });\n      return validate;\n    });\n  }\n\n  handleSubmit() {\n    const {\n      signInProps,\n      history\n    } = this.props;\n    const {\n      email\n    } = this.state;\n    signInProps(email);\n    history.push('/carteira');\n  } //  source https://pt.stackoverflow.com/questions/1386/express%C3%A3o-regular-para-valida%C3%A7%C3%A3o-de-e-mail\n\n\n  toValidateData(email, password) {\n    const reg = /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n    const validEmail = reg.test(email);\n    const miniLengthPassword = 6;\n    const validPassword = password.length >= miniLengthPassword;\n\n    if (validEmail && validPassword) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    const {\n      isDisabled\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LoginForm, {\n      formData: this.state,\n      onInputChange: this.handleInputChange,\n      onSubmit: this.handleSubmit,\n      buttonIsAble: isDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signInProps: email => dispatch(signIn(email))\n});\n\nLogin.propTypes = {\n  signInProps: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/ana/Documentos/Trybe/Trybe-Projects/Trybe-TrybeWallet/src/pages/Login/index.js"],"names":["React","PropTypes","connect","LoginForm","signIn","Login","Component","constructor","handleInputChange","bind","handleSubmit","toValidateData","state","email","password","isDisabled","target","name","value","setState","validate","signInProps","history","props","push","reg","validEmail","test","miniLengthPassword","validPassword","length","render","mapDispatchToProps","dispatch","propTypes","func","isRequired","shape"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { LoginForm } from '../../components';\nimport { signIn } from '../../actions';\nimport './LoginPage.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toValidateData = this.toValidateData.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n      isDisabled: true,\n    };\n  }\n\n  handleInputChange({ target: { name, value } }) {\n    this.setState({ [name]: value }, () => {\n      const { email, password } = this.state;\n      const validate = this.toValidateData(email, password)\n        ? this.setState({ isDisabled: false })\n        : this.setState({ isDisabled: true });\n      return validate;\n    });\n  }\n\n  handleSubmit() {\n    const { signInProps, history } = this.props;\n    const { email } = this.state;\n    signInProps(email);\n    history.push('/carteira');\n  }\n\n  //  source https://pt.stackoverflow.com/questions/1386/express%C3%A3o-regular-para-valida%C3%A7%C3%A3o-de-e-mail\n  toValidateData(email, password) {\n    const reg = /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n    const validEmail = reg.test(email);\n    const miniLengthPassword = 6;\n    const validPassword = password.length >= miniLengthPassword;\n\n    if (validEmail && validPassword) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    const { isDisabled } = this.state;\n    return (\n      <div className=\"login-page\">\n        <LoginForm\n          formData={ this.state }\n          onInputChange={ this.handleInputChange }\n          onSubmit={ this.handleSubmit }\n          buttonIsAble={ isDisabled }\n        />\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  signInProps: (email) => dispatch(signIn(email)) });\n\nLogin.propTypes = {\n  signInProps: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}